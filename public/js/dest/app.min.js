angular.module("AccountCtrl",[]).controller("AccountController",["$scope","$http","$location","$rootScope","$routeParams","$state","AccountService",function($scope,$http,$location,$rootScope,$routeParams,$state,AccountService){$scope.edit=!0,$rootScope.loggedIn=!1,$scope.user={},$state.transitionTo("account.details"),$rootScope.message="",AccountService.GetUserData($scope,$rootScope),$scope.sendMail=function(){$http.post("/api/sendmail").error(function(){$scope.res="blad podczas wyslania"}).success(function(){$scope.res="wyslano maila"})},$scope.UpdateData=function(){AccountService.UpdateUserData($scope)},$scope.createList=function(){AccountService.CreateList($scope)},$scope.AddAddressToList=function(object_id,contactFirstName,contactLastName,contactEmail){AccountService.AddAddressToList($scope,$rootScope,contactFirstName,contactLastName,contactEmail)},$scope.DeleteList=function(id,object_id){$scope.user.lists.splice(id,1),AccountService.DeleteList($scope,object_id)},$scope.DeleteContactFromList=function(index){AccountService.DeleteContactFromList($scope,$rootScope,index)},$scope.ListDetails=function(index){$scope.chosenList=$scope.user.lists[index],$rootScope.ListIndex=index},$scope.EditContactData=function(id,firstName,lastName,email){AccountService.EditContactData($scope,$rootScope,id,firstName,lastName,email)},$scope.editEnable=function(){return 1==$scope.edit?($scope.edit=!1,$scope.edit):0==$scope.edit?($scope.edit=!0,$scope.edit):void 0},$scope.DeleteEmail=function(index){console.log("id emaila "+index),AccountService.DeleteEmail($scope,$rootScope,index)},$scope.CreateEmail=function(newMailName,newMailBody){console.log(newMailName+""+newMailBody),AccountService.CreateEmail($scope,$rootScope,newMailName,newMailBody)},$scope.SelectEmailToEdit=function(index){$scope.chosenEmail=$scope.user.emailLayouts[index],$scope.chosenEmail.id=index,console.log($scope.chosenEmail.id)},$scope.UpdateEmail=function(name,updateMailBody){console.log(name+updateMailBody),AccountService.UpdateEmail($scope,name,updateMailBody)},$scope.logout=function(){AccountService.Logout($rootScope)}}]),angular.module("appServices",[]).factory("AccountService",["$http","$location","$state",function($http,$location,$state){return{GetUserData:function($scope,$rootScope){$http.get("/loggedin").success(function(data){$scope.user=data,"0"!==data&&($rootScope.loggedIn=!0)})},UpdateUserData:function($scope){$http.post("/api/UpdateUserData",{username:$scope.user.username,name:$scope.user.name,surname:$scope.user.surname,email:$scope.user.email,emailPassword:$scope.user.emailPassword}).success(function(){$scope.editEnable()})},CreateList:function($scope){$http.post("/api/createList",{username:$scope.user.username,name:$scope.user.lists.name}).success(function(){$http.get("/loggedin").success(function(data){$scope.user=data})})},AddAddressToList:function($scope,$rootScope,contactFirstName,contactLastName,contactEmail){$http.post("/api/addContactToList",{username:$scope.user.username,listId:$rootScope.ListIndex,contactFirstName:contactFirstName,contactLastName:contactLastName,contactEmail:contactEmail}).success(function(){setTimeout(function(){$http.get("/loggedin").success(function(data){$scope.user=data,$scope.chosenList=$scope.user.lists[$rootScope.ListIndex]})},100)})},DeleteContactFromList:function($scope,$rootScope,index){$http.post("/api/deleteContactFromList",{username:$scope.user.username,id:index,listId:$rootScope.ListIndex}).success(function(){$http.get("/loggedin").success(function(data){$scope.user=data,$scope.chosenList=$scope.user.lists[$rootScope.ListIndex]})})},EditContactData:function($scope,$rootScope,id,firstName,lastName,email){$http.post("/api/editContactData",{username:$scope.user.username,listId:$rootScope.ListIndex,contactId:id,firstName:firstName,lastName:lastName,email:email})},DeleteList:function($scope,object_id){$http.post("/api/deleteList",{id:object_id,username:$scope.user.username})},DeleteEmail:function($scope,$rootScope,index){$http.post("/api/deleteEmail",{username:$scope.user.username,id:index}).success(function(){$http.get("/loggedin").success(function(data){$scope.user=data,$scope.chosenList=$scope.user.lists[$rootScope.ListIndex]})})},CreateEmail:function($scope,$rootScope,newMailName,newMailBody){$http.post("/api/createNewMail",{username:$scope.user.username,name:newMailName,body:newMailBody}).success(function(){$http.get("/loggedin").success(function(data){$scope.user=data,$scope.chosenList=$scope.user.lists[$rootScope.ListIndex]}),$state.transitionTo("account.emails")})},UpdateEmail:function($scope,name,updateMailBody){$http.post("/api/updateEmailData",{username:$scope.user.username,id:$scope.chosenEmail.id,name:name,body:updateMailBody}).success(function(){$http.get("/loggedin").success(function(data){$scope.user=data,$scope.chosenList=$scope.user.lists[$rootScope.ListIndex]}),$state.transitionTo("account.emails")})},Logout:function($rootScope){$http.post("/logout").success(function(){$location.url("/login"),$rootScope.loggedIn=!1,$rootScope.message="Logged out."})}}}]),angular.module("LoginCtrl",[]).controller("LoginController",["$scope","$rootScope","$http","$location",function($scope,$rootScope,$http,$location){$scope.tagline="Login page",$scope.user={},$scope.login=function(){$http.post("/login",{username:$scope.user.username,password:$scope.user.password}).success(function(){$location.url("/account")}).error(function(){$location.url("/login")})}}]),angular.module("RegisterCtrl",[]).controller("RegisterController",["$scope","$http","$location","$rootScope",function($scope,$http,$location){$scope.tagline="Registration page",$scope.user={},$scope.register=function(){$http.post("/registration",{username:$scope.user.username,password:$scope.user.password}).success(function(){$http.post("/login",{username:$scope.user.username,password:$scope.user.password}).success(function(){$location.url("/account")})})}}]),angular.module("appRoutes",["ui.router"]).config(["$locationProvider","$httpProvider","$stateProvider","$urlRouterProvider",function($locationProvider,$httpProvider,$stateProvider,$urlRouterProvider){var checkLoggedin=function($q,$timeout,$http,$location,$rootScope){var deferred=$q.defer();$http.get("/loggedin").success(function(user){"0"!==user?$timeout(deferred.resolve,0):($rootScope.message="You need to log in.",$timeout(function(){deferred.reject()},0),$location.url("/login"))})};$httpProvider.responseInterceptors.push(function($q,$location){return function(promise){return promise.then(function(response){return response},function(response){return 401===response.status&&$location.url("/login"),$q.reject(response)})}}),$urlRouterProvider.otherwise("/account"),$stateProvider.state("login",{url:"/login",templateUrl:"views/login.html",controller:"LoginController"}).state("registration",{url:"/registration",templateUrl:"views/registration.html",controller:"RegisterController"}).state("account",{url:"/account",templateUrl:"views/account.html",controller:"AccountController",resolve:{loggedin:checkLoggedin}}).state("account.details",{templateUrl:"views/account-details.html"}).state("account.lists",{templateUrl:"views/account-lists.html"}).state("account.listDetails",{templateUrl:"views/list-details.html"}).state("account.campaigns",{templateUrl:"views/account-campaigns.html"}).state("account.createCampaign",{templateUrl:"views/campaign-create.html"}).state("account.statistics",{templateUrl:"views/account-statistics.html"}).state("account.emails",{templateUrl:"views/account-emails.html"}).state("account.createEmail",{templateUrl:"views/email-create.html"}).state("account.editEmail",{templateUrl:"views/email-edit.html"}),$locationProvider.html5Mode(!0)}]),angular.module("project",["ngRoute","appRoutes","AccountCtrl","LoginCtrl","RegisterCtrl","appServices"]);